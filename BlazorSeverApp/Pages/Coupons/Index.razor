@page "/coupons"
@using BlazorSeverApp.Data.Dtos
@using BlazorSeverApp.Services.IServices
@inject ICouponService _couponService
@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager _navigationManager
@inject IJSRuntime _js
@* @attribute [Authorize] *@

<PageTitle>@_title</PageTitle>

    <h3>@_title</h3>

@if (string.IsNullOrEmpty(_error) == false)
{
    <p class="text-danger">@_error</p>
}

@if (_items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover table-sm">
            <caption>List of coupons</caption>
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Code</th>
                    <th>Discount</th>
                    <th>Min Amount</th>
                    @if (_isAdmin)
                    {
                        <th>
                            <a class="btn btn-sm btn-primary" href="coupon/create" title="Create">
                                <span class="oi oi-plus" aria-hidden="true"></span>
                            </a>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in _items)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Code</td>
                        <td>@item.Discount.ToString("c")</td>
                        <td>@item.MinAmount.ToString("c")</td>
                        @if (_isAdmin)
                        {
                            <td>
                                <button class="btn btn-sm btn-danger" @onclick="@(async ()=> await delete(item.Id))" title="Delete">
                                    <span class="oi oi-trash" aria-hidden="true"></span>
                                </button>
                                <a class="btn btn-sm btn-warning" title="Edit" href="coupon/edit/@item.Id">
                                    <span class="oi oi-pencil" aria-hidden="true"></span>
                                </a>
                                <a class="btn btn-sm btn-info" title="Details" href="coupon/details/@item.Id">
                                    <span class="oi oi-eye" aria-hidden="true"></span>
                                </a>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private string _title = "Coupons Index";
    private List<CouponDto>? _items;
    private bool _isAdmin = false;
    private string? _error = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authStateProvider = await _authStateProvider.GetAuthenticationStateAsync();
        var user = authStateProvider.User;
        if (user.Identity!.IsAuthenticated)
        {
            _isAdmin = user.FindFirst("role")!.Value == "Admins";
            await load();
        }
        else
        {
            _navigationManager.NavigateTo("login");
        }
    }

    private async Task load()
    {
        _error = string.Empty;
        var response = await _couponService.GetAll();
        if (response is not null && response.IsSuccessful)
        {
            _items = JsonConvert.DeserializeObject<List<CouponDto>>(Convert.ToString(response.Result));
        }
        else
        {
            _error = response is null ? "Error loading data" : response.Message;
        }
    }

    private async Task delete(int id)
    {
        if (await _js.InvokeAsync<bool>("confirm", "Are you sure you want to delete this item?"))
        {
            var response = await _couponService.Delete(id);
            if (response is not null && response.IsSuccessful)
            {
                await load();
            }
        }
    }
}
